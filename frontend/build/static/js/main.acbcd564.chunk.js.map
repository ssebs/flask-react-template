{"version":3,"sources":["components/Header.jsx","components/About.jsx","components/Test.jsx","API.js","components/TestQuery.jsx","App.jsx","index.js"],"names":["withRouter","props","Navbar","bg","variant","className","expand","sticky","Container","to","Brand","Text","Toggle","Collapse","id","Nav","justify","activeKey","location","pathname","style","height","maxHeight","Link","NavDropdown","title","Item","About","Test","BASE_URL","getTestQry","qry","a","Axios","get","method","headers","resp","console","log","error","TestQuery","useParams","useState","query","setQuery","results","setResults","showSpinner","setShowSpinner","content","msg","setMsg","doQuery","q","res","useEffect","handleSubmit","e","preventDefault","Alert","onClose","dismissible","Form","onSubmit","Row","Col","Control","type","name","placeholder","value","onChange","target","Button","whiteSpace","JSON","stringify","data","Spinner","animation","role","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acbcd564.chunk.js","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Navbar, Container, Nav, NavDropdown } from \"react-bootstrap\";\n\nconst Header = (props) => {\n    return (\n        <Navbar\n            bg=\"primary\"\n            variant=\"dark\"\n            className=\"mb-4\"\n            expand=\"md\"\n            sticky=\"top\"\n        >\n            <Container>\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand>Flask React Template</Navbar.Brand>\n                </LinkContainer>\n                <Navbar.Text>{\" | \"}</Navbar.Text>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav\n                        justify\n                        className=\"ml-auto d-flex align-items-center\"\n                        activeKey={props.location.pathname}\n                        style={{ height: \"32\", maxHeight: \"32\" }}\n                    >\n                        <LinkContainer to=\"/\">\n                            <Nav.Link>About</Nav.Link>\n                        </LinkContainer>\n                        <NavDropdown title=\"Test\">\n                            <LinkContainer to=\"/test\">\n                                <NavDropdown.Item>Test!</NavDropdown.Item>\n                            </LinkContainer>\n                            <LinkContainer to=\"/test/query\">\n                                <NavDropdown.Item>Search</NavDropdown.Item>\n                            </LinkContainer>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nconst About = () => {\n    return (\n        <Container>\n            <h2>About</h2>\n            <p>This is a template project for deploying a Flask/React web app.</p>\n            <p>\n                Adipisicing et ullamco veniam eu culpa ipsum do tempor. Proident\n                commodo eu culpa reprehenderit ad ex commodo tempor amet tempor\n                cupidatat. Laboris magna non ullamco ad esse incididunt irure\n                nostrud sunt elit qui eiusmod ipsum elit. Quis amet cillum\n                cupidatat consectetur. Voluptate duis ad esse occaecat velit\n                irure ipsum velit nisi reprehenderit reprehenderit nostrud\n                incididunt proident. Adipisicing commodo ullamco tempor laboris\n                voluptate et in ex do adipisicing sint.\n            </p>\n        </Container>\n    );\n};\n\nexport default About;\n","import React from 'react'\n\nconst Test = () => {\n    return (\n        <div>\n            Test!\n        </div>\n    )\n}\n\nexport default Test\n","// API.js\nimport Axios from \"axios\";\n\n// TODO: use /api base url for production / docker\n// const BASE_URL = \"http://localhost:5000/api\";\nconst BASE_URL = \"/api\";\n\n// REST API calls\nexport const getTestQry = async (qry) => {\n    try {\n        const resp = await Axios.get(`${BASE_URL}/test/${qry}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        console.log(resp);\n        return resp;\n    } catch (err) {\n        console.error(err);\n        // window.alert(\"Error submiting query, see console err\");\n    }\n};\n\nexport const postTestData = async (data) => {\n    try {\n        const resp = await Axios.post(`${BASE_URL}/test`, { data: data });\n        console.log(resp);\n        return resp;\n    } catch (err) {\n        console.error(err);\n        // window.alert(\"Error submiting query, see console err\");\n    }\n};\n\n// Utils\nexport const toTitleCase = (str) => {\n    return str.replace(/\\w\\S*/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n};\nexport const truncate = (str, n) => {\n    return str.length > n ? str.substr(0, n - 3) + \"...\" : str;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { getTestQry } from \"../API\";\n\nimport {\n    Container,\n    Form,\n    Button,\n    Row,\n    Col,\n    Spinner,\n    Alert,\n} from \"react-bootstrap\";\n\nconst TestQuery = () => {\n    let { qry } = useParams();\n    const [query, setQuery] = useState(\"\");\n    const [results, setResults] = useState(null);\n    const [showSpinner, setShowSpinner] = useState(false);\n    const [msg, setMsg] = useState({\n        content: null,\n        variant: null,\n    });\n\n    const doQuery = async (q) => {\n        setShowSpinner(true);\n        const res = await getTestQry(query);\n        if (!res) {\n            setMsg({\n                content: \"Could not connect to the DB\",\n                variant: \"danger\",\n            });\n            setShowSpinner(false);\n            return;\n        }\n        setMsg({\n            content: null,\n            variant: null,\n        });\n        setResults(res);\n        setShowSpinner(false);\n    };\n\n    useEffect(() => {\n        if (qry) {\n            setQuery(qry);\n        }\n    }, [qry]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        // console.log(query);\n        // TODO: Show spinner on 2nd submit\n        // setShowSpinner(true);\n        doQuery(query);\n    };\n\n    return (\n        <Container>\n            {msg[\"content\"] && (\n                <Alert\n                    variant={msg[\"variant\"]}\n                    onClose={() =>\n                        setMsg({\n                            content: null,\n                            variant: null,\n                        })\n                    }\n                    dismissible\n                >\n                    {/* TODO: Check if error is {}, display generic if so */}\n                    {msg[\"content\"]}\n                </Alert>\n            )}\n            <h5>Test Query</h5>\n            <Form onSubmit={handleSubmit}>\n                <Row>\n                    <Col>\n                        <Form.Control\n                            type=\"search\"\n                            name=\"q\"\n                            placeholder=\"Search...\"\n                            value={query}\n                            onChange={(e) => setQuery(e.target.value)}\n                        />\n                    </Col>\n                    <Col>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n            <hr />\n            {results && (\n                <div>\n                    Response from Flask:\n                    <pre style={{ whiteSpace: \"pre-wrap\" }}>\n                        {JSON.stringify(results.data)}\n                    </pre>\n                </div>\n            )}\n            {showSpinner && !results && (\n                <div className=\"d-flex justify-content-center\">\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </div>\n            )}\n        </Container>\n    );\n};\n\nexport default TestQuery;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport About from \"./components/About\";\nimport Test from \"./components/Test\";\nimport TestQuery from \"./components/TestQuery\";\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <Header />\n            <Route exact path=\"/\" component={About} />\n            <Route exact path=\"/test\" component={Test} />\n            <Route path=\"/test/:qry\" component={TestQuery} />\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}